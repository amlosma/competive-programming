/*لا تقهر عبدا حتى لا يؤذيك عاءه*/
#include<bits/stdc++.h>
#include <stdlib.h>
#include<assert.h>
using namespace std;
#define PI 3.14159265359
#define OO 1e9
#define S second
#define F first
#define MP                  make_pair
int dx[] = { 0, 0, -1, 1, 1, 1, -1, -1 };
int dy[] = { -1, 1, 0, 0, 1, -1, 1, -1 };
#define sz(v) ( (int) (v.size()) )
#define all(v) v.begin(),v.end()
typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;
#define endl "\n"

void fast()
{
	std::ios_base::sync_with_stdio(0);
	cin.tie(NULL);
	cout.tie(NULL);
}
ll gcd(ll a, ll b) { return !b ? a : gcd(b, a % b); }
ll lcm(ll a, ll b) { return (a / gcd(a, b)) * b; }
int n, m, c = 0;
int cnt,tp;
bool valid(int i, int j)
{
	return i >= 0 && i < n&&j >= 0 && j < m;
}

map<int, int>cost;
vector<int> adj[300];
int vis[300];
void dfs(int node)
{
	for (int i = 0; i<(sz(adj[node]));i++)
	{
		int ch = adj[node][i];
		if (!vis[ch])
		{
			vis[ch] = 1;
			dfs(ch);
		}
	}
}
int main()
{
	bool  ok = 0;
	int e, l, h, a;
	cin >> e >> l;
	for (int i = 1; i <= e; i++)
	{
		cin >> l;
		for (int j = 0; j<l; j++)
		{
			cin >> h;
			if (h != 0) ok = 1;
			adj[i].emplace_back(h + e + 1);
			adj[h + e + 1].emplace_back(i);
		}
	}
	int r = 0;
	for (int i = 1; i <= e; i++)
	{
		if (!vis[i]) {
			dfs(i);
			r++;
		}
	}
	if (ok == 1)
	{
		cout << r - 1;
	}
	else cout << r;

	return 0;
}

	
