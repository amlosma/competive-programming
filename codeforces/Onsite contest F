/*
لا تقهر عبدا حتى لا يؤذيك دعاءه
*/
#include<bits/stdc++.h>
#include <stdlib.h>
#include<assert.h>
using namespace std;
#define PI 3.14159265359
#define OO 1e9
#define S second
#define F first
#define MP                  make_pair
int dx[] = { 0, 0, -1, 1, 1, 1, -1, -1 };
int dy[] = { -1, 1, 0, 0, 1, -1, 1, -1 };
#define sz(v) ( (int) (v.size()) )
#define all(v) v.begin(),v.end()
typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;

void fast()
{
	std::ios_base::sync_with_stdio(0);
	cin.tie(NULL);
	cout.tie(NULL);
}
ll gcd(ll a, ll b) { return !b ? a : gcd(b, a % b); }
ll lcm(ll a, ll b) { return (a / gcd(a, b)) * b; }
int n, m, c = 0;
int cnt;
bool valid(int i, int j)
{
	return i >= 0 && i < n&&j >= 0 && j<m;
}
int fix(int y) {
	if (y < 0) return m - 1;
	if (y >= m) return 0;
	return y;
}
/*void itfunction_to_Calc_diver_from_1to_1000000()
{
long long div[1000001];
for (long long i = 1; i <= 1000000; i++)
{
for (int j = i; j <= 1000000; j += i)
div[j]++;
}
}*/
int sumDigit(long long  x)
{
	int c = 0;
	while (x)
	{
		c += x % 10;
		x /= 10;
	}
	return c;
}
long long  lt[26];
string completstring(string s)
{
	char a='.', b='.', x;
	for (int i = 0; i < (int)s.size(); i++)
	{
		int mn = 1e7;
		if (s[i] != '?') a = s[i];
		if (s[i] == '?')
		{
			for (int j = i + 1; j < (int)s.size(); j++)
			{
				if (s[j] != '?')
				{
					b = s[j]; break;
				}
			}
			for (int k = 25; k >= 0; k--)
			{
				if (a != '.'&&b != '.')
				{
					if (abs(lt[k] - lt[a - 'a']) + abs(lt[k] - lt[b - 'a']) <= mn)
					{
						x = k + 'a';
						mn = abs(lt[k] - lt[a - 'a']) + abs(lt[k] - lt[b - 'a']);
					}
				}
				else if (a == '.'&&b != '.')
				{
					if (abs(lt[k] - lt[b - 'a']) <= mn)
					{
						x = k + 'a';
						mn=abs(lt[k] - lt[b - 'a']);
					}

				}
				else
				{
					if (abs(lt[k] - lt[a - 'a']) <= mn)
					{
						x = k + 'a';
						mn=abs(lt[k] - lt[a - 'a']);
					}
				}
			}
			for (int j = i; j < (int)s.size(); j++)
			{
				if (s[j] != '?'){
					a = '.', b = '.'; break;
				}
				s[j] = x;
			}
		}
	}
	return s;
}
int main(){
	int x=0;
	string s;
	cin >> s;
	for (int i = 0; i < 26; i++)
		cin >> lt[i];
	for (int i = 0; i<(int)s.size(); i++)
	{
		if (s[i] == '?')x++;
	}
	if (x == (int)s.size())
	{

		cout << 0<< endl;
		for (int i = 0; i < x; i++)
		{
			cout << 'a';
		
		}
		return 0;
	}
	
		s = completstring(s);
		long long  m = 0;
		for (int i = 0; i < (int)s.size()-1; i++)
		{
			m += abs(lt[s[i] - 'a'] - lt[s[i + 1] - 'a']);
		}
		
		cout << m << endl;
		cout << s << endl;
}
